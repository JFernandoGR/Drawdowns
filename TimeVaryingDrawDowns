%% C/P Structure, E-DrawDowns & Vulnerability in the World Stock-Market Network %%
%% Time-Varying Version %%
%% Input Lecture: %%

cd('C:\Users\Jairo F GudiÃ±o R\Desktop\Stock Network Research') %Location of file%
[~,~,Database]=xlsread('MSCI Index.xlsx','Data'); %Lecture of the file%
%% Inputs and Parameters Definition: %%
Countries=Database(4,2:end);
Dates=Database(3538:end,1);
Database=cell2mat(Database(3538:end,2:end));

CountriesNum=length(Countries);
n=4;
r=n+1;
permutations=100;
value=95;

DaysWindow = 20;
windowL = 500; 

FinalMatrixT=zeros(CountriesNum,CountriesNum,size(Database,1)-windowL);
TrendReinforcementT=zeros(size(Database,1)-windowL,CountriesNum);
InDegreeT=zeros(size(Database,1)-windowL,CountriesNum);
OutDegreeT=zeros(size(Database,1)-windowL,CountriesNum);
NetDegreeT=zeros(size(Database,1)-windowL,CountriesNum);
hub_ranksT=zeros(size(Database,1)-windowL,CountriesNum);
auth_ranksT=zeros(size(Database,1)-windowL,CountriesNum);
NdT=zeros(size(Database,1)-windowL,1);
CoreT=zeros(size(Database,1)-windowL,1);

for w=1:(size(Database,1)-windowL)
    w
%% Creation of Individual Draw-downs Vectors for each country: %%

DatabaseW=Database(w:windowL+w-1,:);
Days = size(DatabaseW,1);

DrawDowns=zeros(size(DatabaseW));

for d=DaysWindow:Days
DataWindow=DatabaseW(d-DaysWindow+1:d,:);
for y=1:CountriesNum
% Local extrema %
[MaximaX,MaxIdxX] = findpeaks(DataWindow(:,y));
[MinimaX, MinIdxX] = findpeaks(-DataWindow(:,y));
MinimaX = -MinimaX;
% Correction Amplitude vs. E-drawdown.
if ~isempty(MaximaX) && ~isempty(MinimaX) && (length(MaximaX)>=2 && length(MinimaX)>=2)
p=1; q=1;
while p<=length(MaxIdxX)
MinimaX=MinimaX(MaxIdxX(p)<MinIdxX);
MinIdxX=MinIdxX(MaxIdxX(p)<MinIdxX);
if length(MinimaX)>1
% Draw-down detection %
% E: MaximaX(p)-MinimaX(p+q); CorrectionAmplitude: MaximaX(p+1)-MinimaX(p+q-1);
if (MaximaX(p)-MinimaX(p+q)) > (MaximaX(p+1)-MinimaX(p+q-1))
DrawDowns(MinIdxX(p+q)+d-DaysWindow,y)=1;
break
   else
p = p+1;
q = q-1;
end
   else
   break
end
end
    else
end

end
end

clear MinimaX MaximaX MaxIdxX MinIdxX MaxIdx MinIdx CorrectionAmplitude 
clear Maxima Minima p q g E
%% Matrices of Co-movements/Joint Drawdowns and Trend Reinforcement Indices %%

% Individual Probabilities %
IndividualProb = bsxfun(@times,(sum(DrawDowns)/Days),(sum(DrawDowns)/Days)');

% Joint Probabilities %
DrawDays=size(DrawDowns,1);
% The effect of each i-row country on j-column country%
CountsCell=zeros(r,CountriesNum,CountriesNum,DrawDays-n);
CountsFirst=zeros(CountriesNum,CountriesNum,r);

for d=1:(DrawDays-n)
DataWindow=DrawDowns(d:d+n,:);
for y=1:CountriesNum
CountsCell(:,y,:,d) = DataWindow(1,y)*DataWindow;
end
end

for k=1:r
N = num2cell(permute(CountsCell(k,:,:,:),[2:r 1]),3);
CountsFirst(:,:,k)=(arrayfun(@(x) sum(x{:}),N)/(DrawDays-n))-IndividualProb;
end
%% Correction for Randomness and Finite Size. Statistical Significance %%

CountsPermMatrix=zeros(r,CountriesNum,CountriesNum,permutations);

for y=1:permutations
PermutationMatrix=(DrawDowns((randperm(DrawDays))',:));
CountsPerm=zeros(r,CountriesNum,CountriesNum,DrawDays-n);
for d=1:(DrawDays-n)
DataWindow=PermutationMatrix(d:d+n,:);
for q=1:CountriesNum
CountsPerm(:,q,:,d) = DataWindow(1,q)*DataWindow;
end
end
for k=1:r
N = num2cell(permute(CountsPerm(k,:,:,:),[2:r 1]),3);
CountsPermMatrix(k,:,:,y)=arrayfun(@(x) sum(x{:}),N)/(DrawDays-n)-IndividualProb;
end

end

for k=1:r
N = num2cell(permute(CountsPermMatrix(k,:,:,:),[2 3 4 1]),3);
N = arrayfun(@(x) permute(x{:},[3 1 2]),N,'UniformOutput',0);
eval([strcat('CountsX',num2str(k)),'=CountsFirst(:,:,k).*(CountsFirst(:,:,k)>=arrayfun(@(x) prctile(x{:},value),N));'])
end
%% Interpreting the Conditional Probability Matrix W %%

% Interdependence Matrix and Trend Reinforcement Index %
FinalMatrix = (CountsX2+CountsX3+CountsX4)/3; % FinalMatrix = (CountsX3);
TrendReinforcementT(w,:)=(FinalMatrix(logical(eye(size(FinalMatrix)))))';
FinalMatrix(logical(eye(size(FinalMatrix)))) = 0;
FinalMatrixT(:,:,w)=FinalMatrix;

% Degree Analysis: %
% Transmitters: %
InDegreeT(w,:)=(sum(FinalMatrix,2))';
% Receptors: %
OutDegreeT(w,:)=(sum(FinalMatrix,1))';
% Net: %
NetDegreeT(w,:)=((sum(FinalMatrix,2)-(sum(FinalMatrix,1))'))';

%% Impacting and Impacted Centrality: Hubs & Authority %%

% Initial values for authority and hub scores of pages:
t = 1E-3;
a = ones(CountriesNum, 1) / sqrt(CountriesNum); % Authority score
k = ones(CountriesNum, 1) / sqrt(CountriesNum); % Hub score
% Keep list of values for authority and hub scores during the iteration:
aValues = zeros(CountriesNum, 0);
kValues = zeros(CountriesNum, 0);
numIter = 0;
while 1
    % Old authority and hub scores:
    aOld = a; 
    kOld = k;
    % Update authority and hub scores and scale to unity:
    a = FinalMatrix' * kOld / sqrt(sum((FinalMatrix' * kOld).^2)); 
    k = FinalMatrix * aOld / sqrt(sum((FinalMatrix * aOld).^2));
    aDiff = abs(a - aOld);
    kDiff = abs(k - kOld);
    % Append new authority and hub scores to lists:
    aValues(:, end + 1) = a;
    kValues(:, end + 1) = k;
    if all(aDiff < t) && all(kDiff < t)
        break;
    end
   numIter = numIter + 1;
end

hub_ranksT(w,:) = (k/sum(k))';
auth_ranksT(w,:) = (a/sum(a))';

%% Controllability %%
[NdT(w,:),~,~] = ExactControllability(FinalMatrix,'plotting',0);
%% Core-Periphery Model %%
CoreT(w,:)=sum(PublicUseCore(FinalMatrix));
end

%% Printing of matrices %%

% save('FinalMatrixT','FinalMatrixT')
% save('TrendReinforcementT','TrendReinforcementT')
% save('InDegreeT','InDegreeT')
% save('OutDegreeT','OutDegreeT')
% save('NetDegreeT','NetDegreeT')
% save('hub_ranksT','hub_ranksT')
% save('auth_ranksT','auth_ranksT')
% save('CoreT','CoreT')
% save('NdT','NdT')

%% Graphics %%
DatesN=Dates(windowL+1:end);
%% From/To Impacts in Different Countries %%

c=37; %Origin Country
d=2; %Target Country

Impacted=zeros(size(Database,1)-windowL,CountriesNum);
Impacting=zeros(size(Database,1)-windowL,CountriesNum);
for w=1:(size(Database,1)-windowL)
Impacting(w,:) = FinalMatrixT(c,:,w); %From other countries:
Impacted(w,:) = FinalMatrixT(:,c,w); %Toward other countries:
end

graymon
figure()
plot(datenum(DatesN,'dd/mm/yyyy'),Impacted(:,d),'Color',[30/255,144/255,255/255],'LineWidth',2)
ylabel('In-Degree')
DatesInit=datenum(DatesN(1),'dd/mm/yyyy');
DatesEnd=datenum(DatesN(end),'dd/mm/yyyy');
dt=(DatesEnd-DatesInit)/10;
set(gca,'xtick',DatesInit:dt:DatesEnd);
set(gca,'xticklabel',datestr(round(DatesInit:dt:DatesEnd),'mmm/YY'));
set(gca,'FontSize',14)
set(gca,'XLim',[datenum(DatesN(1,:),'dd/mm/yyyy') datenum(DatesN(end,:),'dd/mm/yyyy')])
h=gcf;
set(h,'PaperOrientation','landscape');
set(h,'PaperUnits','normalized');
set(h,'PaperPosition',[0 0 1 1]);
title('Vulnerability Analysis')

graymon
figure()
plot(datenum(DatesN,'dd/mm/yyyy'),Impacting(:,c),'Color',[30/255,144/255,255/255],'LineWidth',2)
ylabel('Out-Degree')
DatesInit=datenum(DatesN(1),'dd/mm/yyyy');
DatesEnd=datenum(DatesN(end),'dd/mm/yyyy');
dt=(DatesEnd-DatesInit)/10;
set(gca,'xtick',DatesInit:dt:DatesEnd);
set(gca,'xticklabel',datestr(round(DatesInit:dt:DatesEnd),'mmm/YY'));
set(gca,'FontSize',14)
set(gca,'XLim',[datenum(DatesN(1,:),'dd/mm/yyyy') datenum(DatesN(end,:),'dd/mm/yyyy')])
h=gcf;
set(h,'PaperOrientation','landscape');
set(h,'PaperUnits','normalized');
set(h,'PaperPosition',[0 0 1 1]);
title('Vulnerability Analysis')

graymon
figure()
plot(datenum(DatesN,'dd/mm/yyyy'),auth_ranksT(:,c),'Color',[30/255,144/255,255/255],'LineWidth',2)
ylabel('Authority')
DatesInit=datenum(DatesN(1),'dd/mm/yyyy');
DatesEnd=datenum(DatesN(end),'dd/mm/yyyy');
dt=(DatesEnd-DatesInit)/10;
set(gca,'xtick',DatesInit:dt:DatesEnd);
set(gca,'xticklabel',datestr(round(DatesInit:dt:DatesEnd),'mmm/YY'));
set(gca,'FontSize',14)
set(gca,'XLim',[datenum(DatesN(1,:),'dd/mm/yyyy') datenum(DatesN(end,:),'dd/mm/yyyy')])
h=gcf;
set(h,'PaperOrientation','landscape');
set(h,'PaperUnits','normalized');
set(h,'PaperPosition',[0 0 1 1]);
title('Vulnerability Analysis')

graymon
figure()
plot(datenum(DatesN,'dd/mm/yyyy'),hub_ranksT(:,c),'Color',[30/255,144/255,255/255],'LineWidth',2)
ylabel('Hub')
DatesInit=datenum(DatesN(1),'dd/mm/yyyy');
DatesEnd=datenum(DatesN(end),'dd/mm/yyyy');
dt=(DatesEnd-DatesInit)/10;
set(gca,'xtick',DatesInit:dt:DatesEnd);
set(gca,'xticklabel',datestr(round(DatesInit:dt:DatesEnd),'mmm/YY'));
set(gca,'FontSize',14)
set(gca,'XLim',[datenum(DatesN(1,:),'dd/mm/yyyy') datenum(DatesN(end,:),'dd/mm/yyyy')])
h=gcf;
set(h,'PaperOrientation','landscape');
set(h,'PaperUnits','normalized');
set(h,'PaperPosition',[0 0 1 1]);
title('Vulnerability Analysis')

%% Regional Analysis %%

Europe=[5,6,7,10,12,13,16,17,21,23,27,28,31,33:35,38:41,47,52:57,59,62];
Africa=[22,30,42,49,50];
NorthAmerica=[15,25];
Asia=[3,4,8,11,14,18,19,20,24,26,36,43,44,46,48,51,58,60,61,63:65];
Oceania=[9 32];
SouthAmerica=[1,2,7,29,37,45];

hub_all=[sum(hub_ranksT(:,Europe),2)/numel(Europe),sum(hub_ranksT(:,Asia),2)/numel(Asia),...
    sum(hub_ranksT(:,SouthAmerica),2)/numel(SouthAmerica),sum(hub_ranksT(:,NorthAmerica),2)/numel(NorthAmerica),...
    sum(hub_ranksT(:,Oceania),2)/numel(Oceania),sum(hub_ranksT(:,Africa),2)/numel(Africa)];
graymon
figure()
plot(datenum(DatesN,'dd/mm/yyyy'),hub_all,'LineWidth',2)
ylabel('Hub (by continent)')
DatesInit=datenum(DatesN(1),'dd/mm/yyyy');
DatesEnd=datenum(DatesN(end),'dd/mm/yyyy');
dt=(DatesEnd-DatesInit)/10;
set(gca,'xtick',DatesInit:dt:DatesEnd);
set(gca,'xticklabel',datestr(round(DatesInit:dt:DatesEnd),'mmm/YY'));
set(gca,'FontSize',14)
set(gca,'XLim',[datenum(DatesN(1,:),'dd/mm/yyyy') datenum(DatesN(end,:),'dd/mm/yyyy')])
h=gcf;
set(h,'PaperOrientation','landscape');
set(h,'PaperUnits','normalized');
set(h,'PaperPosition',[0 0 1 1]);
title('Vulnerability Analysis')


auth_all=[sum(auth_ranksT(:,Europe),2)/numel(Europe),sum(auth_ranksT(:,Asia),2)/numel(Asia),...
    sum(auth_ranksT(:,SouthAmerica),2)/numel(SouthAmerica),sum(auth_ranksT(:,NorthAmerica),2)/numel(NorthAmerica),...
    sum(auth_ranksT(:,Oceania),2)/numel(Oceania),sum(auth_ranksT(:,Africa),2)/numel(Africa)];
graymon
figure()
plot(datenum(DatesN,'dd/mm/yyyy'),auth_all,'LineWidth',2)
ylabel('Authority (by continent)')
DatesInit=datenum(DatesN(1),'dd/mm/yyyy');
DatesEnd=datenum(DatesN(end),'dd/mm/yyyy');
dt=(DatesEnd-DatesInit)/10;
set(gca,'xtick',DatesInit:dt:DatesEnd);
set(gca,'xticklabel',datestr(round(DatesInit:dt:DatesEnd),'mmm/YY'));
set(gca,'FontSize',14)
set(gca,'XLim',[datenum(DatesN(1,:),'dd/mm/yyyy') datenum(DatesN(end,:),'dd/mm/yyyy')])
h=gcf;
set(h,'PaperOrientation','landscape');
set(h,'PaperUnits','normalized');
set(h,'PaperPosition',[0 0 1 1]);
title('Vulnerability Analysis')

%% Skewness Analysis %%

graymon
figure()
plot(datenum(DatesN,'dd/mm/yyyy'),skewness(TrendReinforcementT')','Color',[30/255,144/255,255/255],'LineWidth',2)
ylabel('Skewness')
DatesInit=datenum(DatesN(1),'dd/mm/yyyy');
DatesEnd=datenum(DatesN(end),'dd/mm/yyyy');
dt=(DatesEnd-DatesInit)/10;
set(gca,'xtick',DatesInit:dt:DatesEnd);
set(gca,'xticklabel',datestr(round(DatesInit:dt:DatesEnd),'mmm/YY'));
set(gca,'FontSize',14)
set(gca,'XLim',[datenum(DatesN(1,:),'dd/mm/yyyy') datenum(DatesN(end,:),'dd/mm/yyyy')])
h=gcf;
set(h,'PaperOrientation','landscape');
set(h,'PaperUnits','normalized');
set(h,'PaperPosition',[0 0 1 1]);
title('Trend Reinforcement - Skewness')

auth_ranksTSk = skewness(auth_ranksT')';
hub_ranksTSk = skewness(hub_ranksT')';

%% End of the Code %%
